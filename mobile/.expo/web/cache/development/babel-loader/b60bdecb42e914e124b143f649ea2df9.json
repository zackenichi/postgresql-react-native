{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Coding\\\\Builds\\\\end-to-end-react-native\\\\mobile\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TaskInput from \"./components/TaskInput\";\nimport Data from \"./components/Data\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskItems = _useState2[0],\n      setTaskItems = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddMode = _useState4[0],\n      setIsAddMode = _useState4[1];\n\n  var newTaskHandler = function newTaskHandler(newTask) {\n    setTaskItems(function (currentTasks) {\n      return [].concat(_toConsumableArray(currentTasks), [{\n        id: Math.random().toString(),\n        value: newTask\n      }]);\n    });\n    setIsAddMode(false);\n  };\n\n  var deleteTask = function deleteTask(taskId) {\n    setTaskItems(function (currentTasks) {\n      return currentTasks.filter(function (task) {\n        return task.id !== taskId;\n      });\n    });\n  };\n\n  var cancelAddTask = function cancelAddTask() {\n    setIsAddMode(false);\n  };\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataResult = _useState6[0],\n      setDataResult = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showList = _useState8[0],\n      setShowList = _useState8[1];\n\n  useEffect(function () {\n    getTasks();\n  }, []);\n\n  function getTasks() {\n    fetch(\"http://localhost:3001\").then(function (response) {\n      console.log(\"PASSES HERE\");\n      console.log(\"RESPONSE\", response);\n      return response.json();\n    }).then(function (data) {\n      var sampleArray = [];\n      Object.values(data.dblisttask).forEach(function (value) {\n        sampleArray.push(value);\n      });\n\n      if (sampleArray) {\n        setShowList(true);\n      }\n\n      setDataResult(sampleArray);\n      console.log(\"SAMPLE-ARRAY\", sampleArray);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add Task\",\n    onPress: function onPress() {\n      return setIsAddMode(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(TaskInput, {\n    visible: isAddMode,\n    onNewTask: newTaskHandler,\n    cancelAddTask: cancelAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Data, {\n    taskItems: taskItems,\n    deleteTask: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  }\n});","map":{"version":3,"sources":["D:/Coding/Builds/end-to-end-react-native/mobile/App.js"],"names":["StatusBar","React","useState","useEffect","TaskInput","Data","App","taskItems","setTaskItems","isAddMode","setIsAddMode","newTaskHandler","newTask","currentTasks","id","Math","random","toString","value","deleteTask","taskId","filter","task","cancelAddTask","dataResult","setDataResult","showList","setShowList","getTasks","fetch","then","response","console","log","json","data","sampleArray","Object","values","dblisttask","forEach","push","styles","screen","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, View, FlatList } from \"react-native\";\n\nimport TaskInput from \"./components/TaskInput\";\nimport Data from \"./components/Data\";\n\nexport default function App() {\n  // might delete\n  const [taskItems, setTaskItems] = useState([]);\n  const [isAddMode, setIsAddMode] = useState(false);\n\n  const newTaskHandler = (newTask) => {\n    setTaskItems((currentTasks) => [\n      ...currentTasks,\n      {\n        id: Math.random().toString(),\n        value: newTask,\n      },\n    ]);\n    setIsAddMode(false);\n  };\n\n  const deleteTask = (taskId) => {\n    setTaskItems((currentTasks) => {\n      return currentTasks.filter((task) => task.id !== taskId);\n    });\n  };\n\n  const cancelAddTask = () => {\n    setIsAddMode(false);\n  };\n\n  // get data from database\n\n  const [dataResult, setDataResult] = useState([]);\n  const [showList, setShowList] = useState(false);\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  function getTasks() {\n    fetch(\"http://localhost:3001\")\n      .then((response) => {\n        console.log(\"PASSES HERE\");\n        console.log(\"RESPONSE\", response);\n        return response.json();\n      })\n      .then((data) => {\n        let sampleArray = [];\n        Object.values(data.dblisttask).forEach((value) => {\n          sampleArray.push(value);\n        });\n\n        if (sampleArray) {\n          setShowList(true);\n        }\n\n        setDataResult(sampleArray);\n        console.log(\"SAMPLE-ARRAY\", sampleArray);\n      });\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Button title=\"Add Task\" onPress={() => setIsAddMode(true)} />\n      <TaskInput\n        visible={isAddMode}\n        onNewTask={newTaskHandler}\n        cancelAddTask={cancelAddTask}\n      />\n      <Data taskItems={taskItems} deleteTask={deleteTask} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: { padding: 50 },\n});\n"]},"metadata":{},"sourceType":"module"}